package com.gep;

import java.util.LinkedList;
import java.util.List;

//
//
//  Generated by StarUML(tm) Java Add-In
//
//  @ Project : @gep
//  @ File Name : Chromosome.java
//  @ Date : 2013/4/5
//  @ Author : @shenzhan
//
//




/**
 * 染色体Chromosome
 * 
**/
public class Individual implements Cloneable{
	/**
	 * 基因的适应值
	**/
	public double Fitness;
	
	public double Value;
	/**
	 * 染色体 字符串
	**/
	public List<String> Chrom;
	
	
	
	public Individual(){
		this.Chrom=new LinkedList<String>();
	
	}
	
	/**
	 * 添加基因
	 * @param Gene
	 */
	public void AddGene(String[] Gene){
		List<String> listTemp=new LinkedList<String>();
		for(int i=0;i<Gene.length;++i){
			listTemp.add(Gene[i]);
		}
		this.Chrom.addAll(listTemp);
	}
	

	
	/**
	 * Get
	 * @param nIndex
	 * @return
	 */
	public String Get(int nIndex){
		return Chrom.get(nIndex);
	}
	/**
	 * Set
	 * @param nIndex
	 * @param str
	 */
	public void Set(int nIndex, String str){
		Chrom.set(nIndex, str)	;	
	}
	
	/**
	 * 设置个体的值
	 * @param Indiv
	 */
	public void SetValue(Individual Indiv) {
		this.Chrom=new LinkedList<String>();
	     for(int i=0;i<Indiv.Chrom.size();++i){
	    	   this.Chrom.add(Indiv.Chrom.get(i));
	     }
	}
	
	/**
	 * 个体克隆
	 */
	public Object clone(){
		Individual  Indiv = null;
        try{
           Indiv = (Individual)super.clone();
        }catch(CloneNotSupportedException e){
            e.printStackTrace();
        }
        
        Indiv.Chrom=new LinkedList<String>();
        for(int i=0;i<this.Chrom.size();++i){
            String sCode=new String(this.Chrom.get(i));
            Indiv.Chrom.add(sCode);
        }
        return Indiv;
    }

	
	
}
